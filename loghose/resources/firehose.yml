Resources:
  FirehoseDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:service}-${self:custom.stage}-firehose-delivery-role
      AssumeRolePolicyDocument:
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': 
                  Ref: 'AWS::AccountId'

  FirehoseDeliveryToS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ${self:service}-${self:custom.stage}-firehose-delivery-to-s3-policy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:PutObject
            Resource:
                - Fn::Sub: 'arn:aws:s3:::${self:custom.S3BucketNameForFirehoseDestination}'
                - Fn::Sub: 'arn:aws:s3:::${self:custom.S3BucketNameForFirehoseDestination}*'
      Roles:
        - Ref: FirehoseDeliveryRole

  FirehoseInvokeLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ${self:service}-${self:custom.stage}-firehose-invoke-lambda-policy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'lambda:InvokeFunction'
            Resource: 
              - Fn::GetAtt: TransformLambdaFunction.Arn
      Roles:
        - Ref: FirehoseDeliveryRole

  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: ${self:service}-${self:custom.stage}-firehose-delivery-stream
      ExtendedS3DestinationConfiguration:
        BucketARN: 
          Fn::Sub: 'arn:aws:s3:::${self:custom.S3BucketNameForFirehoseDestination}'
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 3
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: error/pubrecord/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/
        Prefix: pubrecord/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/
        RoleARN: 
          Fn::GetAtt: FirehoseDeliveryRole.Arn
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: 
                    Fn::GetAtt: TransformLambdaFunction.Arn 
              Type: Lambda